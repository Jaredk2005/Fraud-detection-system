{"version":3,"file":"training-CKDkfTRN.js","sources":["../../../../pages/training.vue"],"sourcesContent":["<template>\n  <NuxtLayout name=\"default\">\n  <div class=\"space-y-6\">\n    <!-- File Upload Section -->\n    <div class=\"card p-6\">\n      <h2 class=\"text-xl font-semibold text-white mb-4\">Upload Training Data</h2>\n      <div class=\"space-y-4\">\n        <div class=\"border-2 border-dashed border-gray-600 rounded-lg p-6 text-center\">\n          <input\n            ref=\"fileInput\"\n            type=\"file\"\n            accept=\".csv\"\n            @change=\"handleFileSelect\"\n            class=\"hidden\"\n          />\n          <div v-if=\"!selectedFile\" @click=\"$refs.fileInput.click()\" class=\"cursor-pointer\">\n            <div class=\"text-4xl text-gray-400 mb-2\">ðŸ“„</div>\n            <p class=\"text-gray-300\">Click to select a CSV file</p>\n            <p class=\"text-sm text-gray-500 mt-1\">File must contain 'is_fraud' column</p>\n          </div>\n          <div v-else class=\"space-y-2\">\n            <div class=\"text-2xl text-green-400 mb-2\">âœ“</div>\n            <p class=\"text-white font-medium\">{{ selectedFile.name }}</p>\n            <p class=\"text-sm text-gray-400\">{{ formatFileSize(selectedFile.size) }}</p>\n            <button @click=\"clearFile\" class=\"text-red-400 hover:text-red-300 text-sm mt-2\">\n              Remove file\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Training Status -->\n    <div class=\"card p-6\">\n      <div class=\"flex items-center justify-between mb-6\">\n        <h2 class=\"text-xl font-semibold text-white\">Model Training Status</h2>\n        <button \n          @click=\"startTraining\"\n          :disabled=\"isTraining || !selectedFile\"\n          class=\"btn-primary disabled:opacity-50\"\n        >\n          {{ isTraining ? 'Training in Progress...' : 'Start Training' }}\n        </button>\n      </div>\n\n      <!-- Error Display -->\n      <div v-if=\"trainingError\" class=\"mb-4 p-4 bg-red-900/30 border border-red-700 rounded-lg\">\n        <p class=\"text-red-400 text-sm\">{{ trainingError }}</p>\n      </div>\n\n      <div v-if=\"isTraining\" class=\"space-y-4\">\n        <div class=\"flex justify-between text-sm\">\n          <span class=\"text-gray-400\">Progress</span>\n          <span class=\"text-blue-400\">{{ trainingProgress }}%</span>\n        </div>\n        <div class=\"w-full bg-gray-700 rounded-full h-2\">\n          <div \n            class=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n            :style=\"{ width: trainingProgress + '%' }\"\n          ></div>\n        </div>\n        <p class=\"text-sm text-gray-400\">{{ currentStep }}</p>\n      </div>\n\n      <div v-else-if=\"lastTraining.accuracy !== null && lastTraining.modelId\" class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-green-400\">{{ (lastTraining.accuracy * 100).toFixed(2) }}%</div>\n          <div class=\"text-sm text-gray-400\">Accuracy</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-blue-400\">{{ lastTraining.samples || 'N/A' }}</div>\n          <div class=\"text-sm text-gray-400\">Training Samples</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-purple-400\">{{ (lastTraining.trainingTime || 0).toFixed(1) }}s</div>\n          <div class=\"text-sm text-gray-400\">Training Time</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-orange-400\">{{ lastTraining.modelId ? lastTraining.modelId.slice(0, 8) + '...' : 'N/A' }}</div>\n          <div class=\"text-sm text-gray-400\">Model ID</div>\n        </div>\n      </div>\n      \n      <div v-else class=\"text-center py-8\">\n        <div class=\"text-gray-400 text-lg mb-2\">No model trained yet</div>\n        <div class=\"text-gray-500 text-sm\">Upload a CSV file and start training to see results</div>\n      </div>\n    </div>\n\n    <!-- Training Configuration -->\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <div class=\"card p-6\">\n        <h3 class=\"text-lg font-semibold text-white mb-4\">Training Configuration</h3>\n        <div class=\"space-y-4\">\n          <div>\n            <label class=\"block text-sm font-medium text-gray-300 mb-2\">Algorithm</label>\n            <select v-model=\"config.algorithm\" class=\"input-field w-full\" disabled>\n              <option value=\"logistic_regression\">Logistic Regression</option>\n              <option value=\"random_forest\">Random Forest</option>\n              <option value=\"xgboost\">XGBoost</option>\n              <option value=\"neural_network\">Neural Network</option>\n            </select>\n            <p class=\"text-xs text-gray-500 mt-1\">Currently using Logistic Regression (FastAPI backend)</p>\n          </div>\n\n          <div>\n            <label class=\"block text-sm font-medium text-gray-300 mb-2\">Test Split</label>\n            <select v-model=\"config.testSplit\" class=\"input-field w-full\" disabled>\n              <option value=\"0.2\">20% (Default)</option>\n              <option value=\"0.3\">30%</option>\n              <option value=\"0.1\">10%</option>\n            </select>\n          </div>\n\n          <div>\n            <label class=\"block text-sm font-medium text-gray-300 mb-2\">Random State</label>\n            <input \n              v-model=\"config.randomState\" \n              type=\"number\" \n              class=\"input-field w-full\"\n              disabled\n            />\n            <p class=\"text-xs text-gray-500 mt-1\">Fixed at 42 for reproducibility</p>\n          </div>\n\n          <div class=\"flex items-center space-x-2\">\n            <input \n              id=\"autoRetrain\" \n              v-model=\"config.autoRetrain\" \n              type=\"checkbox\" \n              class=\"rounded border-gray-600 bg-gray-700 text-blue-500\"\n              disabled\n            />\n            <label for=\"autoRetrain\" class=\"text-sm text-gray-300\">\n              Enable automatic retraining (Coming soon)\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <!-- Training History -->\n      <div class=\"card p-6\">\n        <h3 class=\"text-lg font-semibold text-white mb-4\">Training History</h3>\n        <div class=\"space-y-3 max-h-64 overflow-y-auto\">\n          <div v-if=\"trainingHistory.length === 0\" class=\"text-center py-4\">\n            <div class=\"text-gray-400\">No training history yet</div>\n          </div>\n          <div \n            v-for=\"session in trainingHistory\" \n            :key=\"session.id\"\n            class=\"flex items-center justify-between p-3 bg-gray-700/50 rounded-lg\"\n          >\n            <div>\n              <div class=\"font-medium text-white\">{{ session.algorithm }}</div>\n              <div class=\"text-sm text-gray-400\">{{ formatDate(session.date) }}</div>\n            </div>\n            <div class=\"text-right\">\n              <div class=\"font-medium text-green-400\">{{ (session.accuracy * 100).toFixed(2) }}%</div>\n              <div class=\"text-sm text-gray-400\">{{ session.trainingTime.toFixed(1) }}s</div>\n              <div class=\"text-xs text-gray-500 mt-1\">ID: {{ session.modelId?.slice(0, 8) }}...</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Feature Importance -->\n    <div class=\"card p-6\" v-if=\"featureImportance.length > 0\">\n      <h3 class=\"text-lg font-semibold text-white mb-4\">Feature Importance</h3>\n      <div class=\"space-y-4\">\n        <div v-for=\"feature in featureImportance\" :key=\"feature.name\" class=\"flex items-center\">\n          <div class=\"w-32 text-sm text-gray-300\">{{ feature.name }}</div>\n          <div class=\"flex-1 mx-4\">\n            <div class=\"w-full bg-gray-700 rounded-full h-2\">\n              <div \n                class=\"bg-blue-500 h-2 rounded-full\"\n                :style=\"{ width: feature.importance + '%' }\"\n              ></div>\n            </div>\n          </div>\n          <div class=\"w-12 text-sm text-blue-400 text-right\">{{ feature.importance }}%</div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </NuxtLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { format } from 'date-fns'\n\ndefinePageMeta({\n  middleware: 'auth'\n})\n\n// Reactive state\nconst isTraining = ref(false)\nconst trainingProgress = ref(0)\nconst currentStep = ref('')\nconst selectedFile = ref<File | null>(null)\nconst trainingError = ref('')\n\n// Configuration (mostly display-only to match FastAPI backend)\nconst config = reactive({\n  algorithm: 'logistic_regression',\n  testSplit: '0.2',\n  randomState: 42,\n  autoRetrain: false\n})\n\n// Training results\nconst lastTraining = ref({\n  accuracy: null,\n  samples: 0,\n  trainingTime: null,\n  modelId: null\n})\n\n// Training history\nconst trainingHistory = ref([\n  // Will be populated with actual training results\n])\n\n// Feature importance (placeholder - would come from backend)\nconst featureImportance = ref([])\n\n// FastAPI base URL - adjust as needed\nconst API_BASE_URL = 'http://localhost:8000' // Change this to your FastAPI server URL\n\n// File handling methods\nconst handleFileSelect = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (target.files && target.files.length > 0) {\n    selectedFile.value = target.files[0]\n    trainingError.value = ''\n  }\n}\n\nconst clearFile = () => {\n  selectedFile.value = null\n  const fileInput = document.querySelector('input[type=\"file\"]') as HTMLInputElement\n  if (fileInput) {\n    fileInput.value = ''\n  }\n}\n\nconst formatFileSize = (bytes: number) => {\n  if (bytes === 0) return '0 Bytes'\n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\n// Training method that calls FastAPI endpoint\nconst startTraining = async () => {\n  if (!selectedFile.value) {\n    trainingError.value = 'Please select a CSV file first'\n    return\n  }\n\n  isTraining.value = true\n  trainingProgress.value = 0\n  trainingError.value = ''\n  currentStep.value = 'Uploading file and starting training...'\n\n  try {\n    // Create FormData for file upload\n    const formData = new FormData()\n    formData.append('file', selectedFile.value)\n\n    // Simulate progress updates while making the actual API call\n    const progressInterval = setInterval(() => {\n      if (trainingProgress.value < 90) {\n        trainingProgress.value += Math.random() * 10\n        if (trainingProgress.value < 30) {\n          currentStep.value = 'Uploading and validating file...'\n        } else if (trainingProgress.value < 60) {\n          currentStep.value = 'Preprocessing data...'\n        } else if (trainingProgress.value < 90) {\n          currentStep.value = 'Training model...'\n        }\n      }\n    }, 500)\n\n    // Make API call to FastAPI training endpoint\n    const response = await fetch(`${API_BASE_URL}/train`, {\n      method: 'POST',\n      body: formData,\n    })\n\n    clearInterval(progressInterval)\n\n    if (!response.ok) {\n      const errorData = await response.json()\n      throw new Error(errorData.detail || 'Training failed')\n    }\n\n    const result = await response.json()\n    \n    // Check if training was successful\n    if (!result.success) {\n      throw new Error(result.message || 'Training failed')\n    }\n    \n    // Complete the progress\n    trainingProgress.value = 100\n    currentStep.value = result.message || 'Training completed successfully!'\n\n    // Update training results\n    lastTraining.value = {\n      accuracy: result.accuracy,\n      samples: 0, // FastAPI doesn't return this, could be added\n      trainingTime: result.training_time,\n      modelId: result.model_id\n    }\n\n    localStorage.clear()\n    localStorage.setItem(\"accuracy\", result.accuracy)\n    localStorage.setItem(\"time\", result.training_time)\n    localStorage.setItem(\"model\", result.model_id)\n    // Add to training history\n    trainingHistory.value.unshift({\n      id: Date.now(),\n      algorithm: 'Logistic Regression',\n      date: new Date(),\n      accuracy: result.accuracy,\n      trainingTime: result.training_time,\n      modelId: result.model_id\n    })\n\n    // Clear the selected file\n    setTimeout(() => {\n      selectedFile.value = null\n      const fileInput = document.querySelector('input[type=\"file\"]') as HTMLInputElement\n      if (fileInput) {\n        fileInput.value = ''\n      }\n    }, 2000)\n\n  } catch (error: any) {\n    clearInterval(progressInterval)\n    trainingError.value = error.message || 'Training failed'\n    console.error('Training error:', error)\n  } finally {\n    setTimeout(() => {\n      isTraining.value = false\n    }, 1000)\n  }\n}\n\nconst formatDate = (date: Date) => {\n  return format(date, 'MMM dd, yyyy HH:mm')\n}\n\n// Load any existing training history from localStorage on component mount\nonMounted(() => {\n  // You could load training history from localStorage or make an API call\n  // to get previous training sessions if your backend supports it\n})\n</script>\n\n<style scoped>\n.btn-primary {\n  @apply bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors;\n}\n\n.input-field {\n  @apply bg-gray-700 border border-gray-600 text-white rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent;\n}\n\n.card {\n  @apply bg-gray-800 rounded-lg border border-gray-700;\n}\n</style>"],"names":["progressInterval","_ssrRenderComponent","_mergeProps","_push","_parent","_unref","_ssrInterpolate","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderAttr","_ssrRenderList","_ssrRenderStyle","_createVNode","_createBlock","$refs","_toDisplayString","_vModelSelect","_vModelText","_vModelCheckbox","_Fragment","_renderList"],"mappings":"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"}