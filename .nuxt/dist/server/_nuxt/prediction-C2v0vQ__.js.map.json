{"file":"prediction-C2v0vQ__.js","mappings":"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","names":["_ssrRenderComponent","_mergeProps","_push","_parent","_unref","_ssrRenderAttr","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderClass","_ssrInterpolate","_ssrRenderList","_createVNode","_createBlock","_vModelText","_vModelSelect","_toDisplayString","$refs","_Fragment","_renderList"],"sources":["../../../../pages/prediction.vue"],"sourcesContent":["<template>\n  <NuxtLayout name=\"default\">\n  <div class=\"space-y-6\">\n    <!-- Prediction Modes -->\n    <div class=\"flex space-x-4 mb-6\">\n      <button \n        @click=\"activeTab = 'single'\"\n        :class=\"activeTab === 'single' ? 'btn-primary' : 'btn-secondary'\"\n      >\n        Single Prediction\n      </button>\n      <button \n        @click=\"activeTab = 'batch'\"\n        :class=\"activeTab === 'batch' ? 'btn-primary' : 'btn-secondary'\"\n      >\n        Batch Prediction\n      </button>\n    </div>\n\n    <!-- Single Prediction -->\n    <div v-if=\"activeTab === 'single'\" class=\"card p-6\">\n      <h2 class=\"text-xl font-semibold text-white mb-6\">Single Transaction Prediction</h2>\n      \n      <form @submit.prevent=\"predictSingle\" class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div>\n          <label class=\"block text-sm font-medium text-gray-300 mb-2\">Transaction Amount</label>\n          <input \n            v-model=\"singleForm.amt\" \n            type=\"number\" \n            step=\"0.01\" \n            class=\"input-field w-full\"\n            placeholder=\"0.00\"\n            required\n          />\n        </div>\n\n        <div>\n          <label class=\"block text-sm font-medium text-gray-300 mb-2\">Category</label>\n          <select v-model=\"singleForm.category\" class=\"input-field w-full\" required>\n            <option value=\"\">Select category</option>\n            <option value=\"personal_care\">Personal Care</option>\n            <option value=\"health_fitness\">Health & Fitness</option>\n            <option value=\"food_dining\">Food & Dining</option>\n            <option value=\"gas_transport\">Gas & Transport</option>\n            <option value=\"entertainment\">Entertainment</option>\n            <option value=\"shopping_net\">Online Shopping</option>\n            <option value=\"grocery_net\">Online Grocery</option>\n            <option value=\"grocery_pos\">Grocery Store</option>\n            <option value=\"shopping_pos\">Retail Shopping</option>\n            <option value=\"misc_net\">Miscellaneous Online</option>\n            <option value=\"misc_pos\">Miscellaneous Retail</option>\n          </select>\n        </div>\n\n        <div>\n          <label class=\"block text-sm font-medium text-gray-300 mb-2\">Merchant</label>\n          <input \n            v-model=\"singleForm.merchant\" \n            type=\"text\" \n            class=\"input-field w-full\"\n            placeholder=\"Merchant name\"\n            required\n          />\n        </div>\n\n        <div>\n          <label class=\"block text-sm font-medium text-gray-300 mb-2\">Gender</label>\n          <select v-model=\"singleForm.gender\" class=\"input-field w-full\" required>\n            <option value=\"\">Select gender</option>\n            <option value=\"M\">Male</option>\n            <option value=\"F\">Female</option>\n          </select>\n        </div>\n\n        <div class=\"md:col-span-2\">\n          <label class=\"block text-sm font-medium text-gray-300 mb-2\">Job</label>\n          <input \n            v-model=\"singleForm.job\" \n            type=\"text\" \n            class=\"input-field w-full\"\n            placeholder=\"Job title\"\n            required\n          />\n        </div>\n\n        <div class=\"md:col-span-2\">\n          <button \n            type=\"submit\" \n            :disabled=\"predicting\"\n            class=\"btn-primary disabled:opacity-50\"\n          >\n            {{ predicting ? 'Analyzing...' : 'Predict Fraud Risk' }}\n          </button>\n        </div>\n      </form>\n\n      <!-- Error Display -->\n      <div v-if=\"error\" class=\"mt-6 p-4 bg-red-500/20 border border-red-500/50 rounded-lg\">\n        <h3 class=\"text-lg font-semibold text-red-400 mb-2\">Error</h3>\n        <p class=\"text-red-300\">{{ error }}</p>\n      </div>\n\n      <!-- Single Prediction Result -->\n      <div v-if=\"singleResult\" class=\"mt-6 p-4 bg-gray-700/50 rounded-lg\">\n        <h3 class=\"text-lg font-semibold text-white mb-4\">Prediction Result</h3>\n        <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div class=\"text-center\">\n            <div \n              :class=\"singleResult.is_fraud ? 'text-red-400' : 'text-green-400'\"\n              class=\"text-2xl font-bold\"\n            >\n              {{ singleResult.is_fraud ? 'FRAUD' : 'LEGITIMATE' }}\n            </div>\n            <div class=\"text-sm text-gray-400\">Classification</div>\n          </div>\n          <div class=\"text-center\">\n            <div \n              :class=\"singleResult.fraud_probability > 0.7 ? 'text-red-400' : singleResult.fraud_probability > 0.4 ? 'text-yellow-400' : 'text-green-400'\"\n              class=\"text-2xl font-bold\"\n            >\n              {{ (singleResult.fraud_probability * 100).toFixed(1) }}%\n            </div>\n            <div class=\"text-sm text-gray-400\">Fraud Probability</div>\n          </div>\n          <div class=\"text-center\">\n            <div \n              :class=\"getRiskLevelColor(singleResult.risk_level)\"\n              class=\"text-2xl font-bold\"\n            >\n              {{ singleResult.risk_level }}\n            </div>\n            <div class=\"text-sm text-gray-400\">Risk Level</div>\n          </div>\n          <div class=\"text-center\">\n            <div class=\"text-2xl font-bold text-blue-400\">\n              {{ singleResult.transaction_id.substring(0, 8) }}...\n            </div>\n            <div class=\"text-sm text-gray-400\">Transaction ID</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Batch Prediction -->\n    <div v-if=\"activeTab === 'batch'\" class=\"space-y-6\">\n      <!-- File Upload -->\n      <div class=\"card p-6\">\n        <h2 class=\"text-xl font-semibold text-white mb-6\">Batch Prediction</h2>\n        \n        <div class=\"border-2 border-dashed border-gray-600 rounded-lg p-8 text-center\">\n          <CloudArrowUpIcon class=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n          <h3 class=\"text-lg font-medium text-white mb-2\">Upload CSV File</h3>\n          <p class=\"text-gray-400 mb-4\">CSV should contain columns: amt, category, merchant, gender, job</p>\n          <input \n            type=\"file\" \n            @change=\"handleFileUpload\"\n            accept=\".csv\"\n            class=\"hidden\"\n            ref=\"fileInput\"\n          />\n          <button \n            @click=\"$refs.fileInput.click()\"\n            class=\"btn-primary\"\n          >\n            Choose File\n          </button>\n          <p class=\"text-sm text-gray-500 mt-2\">\n            Supports CSV files up to 50MB\n          </p>\n        </div>\n\n        <div v-if=\"uploadedFile\" class=\"mt-4 p-4 bg-gray-700/50 rounded-lg\">\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <p class=\"font-medium text-white\">{{ uploadedFile.name }}</p>\n              <p class=\"text-sm text-gray-400\">{{ formatFileSize(uploadedFile.size) }}</p>\n            </div>\n            <button \n              @click=\"processBatch\" \n              :disabled=\"processingBatch\"\n              class=\"btn-primary disabled:opacity-50\"\n            >\n              {{ processingBatch ? 'Processing...' : 'Process Batch' }}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Batch Results -->\n      <div v-if=\"batchResults.length > 0\" class=\"card p-6\">\n        <div class=\"flex items-center justify-between mb-6\">\n          <h3 class=\"text-lg font-semibold text-white\">Batch Results</h3>\n          <div class=\"flex space-x-2\">\n            <button @click=\"exportResults\" class=\"btn-secondary text-sm\">Export Results</button>\n            <button @click=\"downloadReport\" class=\"btn-primary text-sm\">Download Report</button>\n          </div>\n        </div>\n\n        <!-- Results Summary -->\n        <div class=\"grid grid-cols-1 md:grid-cols-5 gap-4 mb-6\">\n          <div class=\"text-center p-4 bg-gray-700/50 rounded-lg\">\n            <div class=\"text-2xl font-bold text-blue-400\">{{ batchSummary.total }}</div>\n            <div class=\"text-sm text-gray-400\">Total Processed</div>\n          </div>\n          <div class=\"text-center p-4 bg-gray-700/50 rounded-lg\">\n            <div class=\"text-2xl font-bold text-green-400\">{{ batchSummary.legitimate }}</div>\n            <div class=\"text-sm text-gray-400\">Legitimate</div>\n          </div>\n          <div class=\"text-center p-4 bg-gray-700/50 rounded-lg\">\n            <div class=\"text-2xl font-bold text-red-400\">{{ batchSummary.fraud }}</div>\n            <div class=\"text-sm text-gray-400\">Fraud Detected</div>\n          </div>\n          <div class=\"text-center p-4 bg-gray-700/50 rounded-lg\">\n            <div class=\"text-2xl font-bold text-yellow-400\">{{ batchSummary.high_risk }}</div>\n            <div class=\"text-sm text-gray-400\">High Risk</div>\n          </div>\n          <div class=\"text-center p-4 bg-gray-700/50 rounded-lg\">\n            <div class=\"text-2xl font-bold text-purple-400\">{{ (batchSummary.fraud_rate * 100).toFixed(1) }}%</div>\n            <div class=\"text-sm text-gray-400\">Fraud Rate</div>\n          </div>\n        </div>\n\n        <!-- Results Table -->\n        <div class=\"overflow-x-auto\">\n          <table class=\"w-full text-sm\">\n            <thead>\n              <tr class=\"border-b border-gray-700\">\n                <th class=\"text-left py-3 text-gray-400\">Transaction ID</th>\n                <th class=\"text-left py-3 text-gray-400\">Row #</th>\n                <th class=\"text-left py-3 text-gray-400\">Fraud Probability</th>\n                <th class=\"text-left py-3 text-gray-400\">Risk Level</th>\n                <th class=\"text-left py-3 text-gray-400\">Classification</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr \n                v-for=\"result in paginatedResults\" \n                :key=\"result.transaction_id\"\n                class=\"border-b border-gray-700/50\"\n              >\n                <td class=\"py-3 text-blue-400\">{{ result.transaction_id.substring(0, 8) }}...</td>\n                <td class=\"py-3 text-gray-300\">{{ result.originalIndex + 1 }}</td>\n                <td class=\"py-3\">\n                  <span \n                    :class=\"result.fraud_probability > 0.7 ? 'text-red-400' : result.fraud_probability > 0.4 ? 'text-yellow-400' : 'text-green-400'\"\n                  >\n                    {{ (result.fraud_probability * 100).toFixed(1) }}%\n                  </span>\n                </td>\n                <td class=\"py-3\">\n                  <span \n                    :class=\"getRiskLevelColor(result.risk_level)\"\n                    class=\"px-2 py-1 rounded-full text-xs\"\n                  >\n                    {{ result.risk_level }}\n                  </span>\n                </td>\n                <td class=\"py-3\">\n                  <span \n                    :class=\"result.is_fraud ? 'bg-red-500/20 text-red-400' : 'bg-green-500/20 text-green-400'\"\n                    class=\"px-2 py-1 rounded-full text-xs\"\n                  >\n                    {{ result.is_fraud ? 'FRAUD' : 'LEGITIMATE' }}\n                  </span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- Pagination -->\n        <div class=\"flex items-center justify-between mt-6\">\n          <div class=\"text-sm text-gray-400\">\n            Showing {{ (currentPage - 1) * pageSize + 1 }} to {{ Math.min(currentPage * pageSize, batchResults.length) }} of {{ batchResults.length }} results\n          </div>\n          <div class=\"flex space-x-2\">\n            <button \n              @click=\"currentPage--\"\n              :disabled=\"currentPage <= 1\"\n              class=\"btn-secondary text-sm disabled:opacity-50\"\n            >\n              Previous\n            </button>\n            <button \n              @click=\"currentPage++\"\n              :disabled=\"currentPage >= totalPages\"\n              class=\"btn-secondary text-sm disabled:opacity-50\"\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </NuxtLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { CloudArrowUpIcon } from '@heroicons/vue/24/outline'\n\ndefinePageMeta({\n  middleware: 'auth'\n})\n\n// Configuration - Update this with your FastAPI backend URL\nconst API_BASE_URL = 'http://localhost:8000' // Change this to your FastAPI backend URL\n\nconst activeTab = ref('single')\nconst predicting = ref(false)\nconst processingBatch = ref(false)\nconst uploadedFile = ref<File | null>(null)\nconst fileInput = ref<HTMLInputElement>()\nconst error = ref('')\n\nconst singleForm = reactive({\n  amt: '',\n  category: '',\n  merchant: '',\n  gender: '',\n  job: ''\n})\n\ninterface PredictionResponse {\n  is_fraud: boolean\n  fraud_probability: number\n  risk_level: string\n  transaction_id: string\n}\n\ninterface BatchSummary {\n  total_transactions: number\n  fraud_detected: number\n  fraud_rate: number\n  average_fraud_probability: number\n  high_risk_transactions: number\n}\n\ninterface BatchPredictionResponse {\n  predictions: PredictionResponse[]\n  summary: BatchSummary\n}\n\nconst singleResult = ref<PredictionResponse | null>(null)\nconst batchResults = ref<(PredictionResponse & { amt: number; originalIndex: number })[]>([])\nconst currentPage = ref(1)\nconst pageSize = 10\n\n// Store batch summary separately since it comes from API\nconst batchSummaryData = ref<any>({\n  total: 0,\n  fraud: 0,\n  legitimate: 0,\n  high_risk: 0,\n  fraud_rate: 0,\n  average_fraud_probability: 0\n})\n\nconst batchSummary = computed(() => batchSummaryData.value)\n\nconst totalPages = computed(() => Math.ceil(batchResults.value.length / pageSize))\n\nconst paginatedResults = computed(() => {\n  const start = (currentPage.value - 1) * pageSize\n  const end = start + pageSize\n  return batchResults.value.slice(start, end)\n})\n\nconst predictSingle = async () => {\n  predicting.value = true\n  error.value = ''\n  singleResult.value = null\n  \n  try {\n    const requestBody = {\n      amt: parseFloat(singleForm.amt),\n      category: singleForm.category,\n      merchant: singleForm.merchant,\n      gender: singleForm.gender,\n      job: singleForm.job\n    }\n\n    const response = await $fetch<PredictionResponse>(`${API_BASE_URL}/predict`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: requestBody\n    })\n    \n    singleResult.value = response\n  } catch (err: any) {\n    error.value = err.data?.detail || err.message || 'An error occurred while making the prediction'\n    console.error('Prediction error:', err)\n  } finally {\n    predicting.value = false\n  }\n}\n\nconst handleFileUpload = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (target.files && target.files[0]) {\n    uploadedFile.value = target.files[0]\n    error.value = ''\n  }\n}\n\nconst processBatch = async () => {\n  if (!uploadedFile.value) return\n  \n  processingBatch.value = true\n  error.value = ''\n  \n  try {\n    // Create FormData to send file\n    const formData = new FormData()\n    formData.append('file', uploadedFile.value)\n\n    // Use $fetch with FormData for file upload\n    const response = await $fetch<BatchPredictionResponse>(`${API_BASE_URL}/predict/batch`, {\n      method: 'POST',\n      body: formData\n    })\n    \n    // Process the batch response\n    batchResults.value = response.predictions.map((prediction, index) => ({\n      ...prediction,\n      // Since we don't have the original amount in the response, we'll use index for display\n      // In a real scenario, you might want to store original data or modify the API response\n      amt: 0, // Will be hidden in the table since we don't have this data\n      originalIndex: index\n    }))\n    \n    // Store summary data\n    batchSummaryData.value = {\n      total: response.summary.total_transactions || response.predictions.length,\n      fraud: response.summary.fraud_detected || response.predictions.filter(p => p.is_fraud).length,\n      legitimate: (response.summary.total_transactions || response.predictions.length) - (response.summary.fraud_detected || response.predictions.filter(p => p.is_fraud).length),\n      high_risk: response.summary.high_risk_transactions || response.predictions.filter(p => p.risk_level === 'HIGH').length,\n      fraud_rate: response.summary.fraud_rate || 0,\n      average_fraud_probability: response.summary.average_fraud_probability || 0\n    }\n    \n    currentPage.value = 1\n    \n  } catch (err: any) {\n    error.value = err.data?.detail || err.message || 'An error occurred while processing the batch'\n    console.error('Batch processing error:', err)\n  } finally {\n    processingBatch.value = false\n  }\n}\n\nconst formatFileSize = (bytes: number) => {\n  if (bytes === 0) return '0 Bytes'\n  const k = 1024\n  const sizes = ['Bytes', 'KB', 'MB']\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n}\n\nconst getRiskLevelColor = (riskLevel: string) => {\n  switch (riskLevel) {\n    case 'LOW': return 'text-green-400'\n    case 'MEDIUM': return 'text-yellow-400'\n    case 'HIGH': return 'text-red-400'\n    default: return 'text-gray-400'\n  }\n}\n\nconst exportResults = () => {\n  if (batchResults.value.length === 0) return\n  \n  const csvContent = [\n    'transaction_id,row_number,is_fraud,fraud_probability,risk_level',\n    ...batchResults.value.map(result => \n      `${result.transaction_id},${result.originalIndex + 1},${result.is_fraud},${result.fraud_probability},${result.risk_level}`\n    )\n  ].join('\\n')\n  \n  const blob = new Blob([csvContent], { type: 'text/csv' })\n  const url = URL.createObjectURL(blob)\n  const a = document.createElement('a')\n  a.href = url\n  a.download = `fraud_predictions_${new Date().toISOString().split('T')[0]}.csv`\n  a.click()\n  URL.revokeObjectURL(url)\n}\n\nconst downloadReport = () => {\n  if (batchResults.value.length === 0) return\n  \n  const report = {\n    generated_at: new Date().toISOString(),\n    summary: batchSummaryData.value,\n    total_predictions: batchResults.value.length,\n    results: batchResults.value.map(result => ({\n      transaction_id: result.transaction_id,\n      row_number: result.originalIndex + 1,\n      is_fraud: result.is_fraud,\n      fraud_probability: result.fraud_probability,\n      risk_level: result.risk_level\n    }))\n  }\n  \n  const blob = new Blob([JSON.stringify(report, null, 2)], { type: 'application/json' })\n  const url = URL.createObjectURL(blob)\n  const a = document.createElement('a')\n  a.href = url\n  a.download = `fraud_detection_report_${new Date().toISOString().split('T')[0]}.json`\n  a.click()\n  URL.revokeObjectURL(url)\n}\n</script>"],"version":3}