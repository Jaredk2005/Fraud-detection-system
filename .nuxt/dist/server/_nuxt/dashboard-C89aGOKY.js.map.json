{"file":"dashboard-C89aGOKY.js","mappings":"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","names":["_ssrRenderComponent","_mergeProps","_push","_parent","_ssrInterpolate","_unref","_ssrRenderList","_ssrRenderClass","_createVNode","_toDisplayString","_createBlock","_Fragment","_renderList"],"sources":["../../../../composables/useFraudData.ts","../../../../pages/dashboard.vue"],"sourcesContent":["export const useFraudData = () => {\n  const generateMockTransactions = (count: number) => {\n    const transactions = []\n    for (let i = 0; i < count; i++) {\n      transactions.push({\n        id: `TXN${String(i + 1).padStart(6, '0')}`,\n        amount: Math.random() * 5000 + 10,\n        timestamp: new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000),\n        merchant: ['Amazon', 'Walmart', 'Gas Station', 'Restaurant', 'ATM'][Math.floor(Math.random() * 5)],\n        location: ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix'][Math.floor(Math.random() * 5)],\n        cardType: ['Visa', 'MasterCard', 'American Express'][Math.floor(Math.random() * 3)],\n        isFraud: Math.random() < 0.05,\n        confidence: Math.random() * 100,\n        riskScore: Math.random() * 100\n      })\n    }\n    return transactions\n  }\n\n  const modelMetrics = ref({\n    accuracy: 98.7,\n    precision: 94.2,\n    recall: 89.5,\n    f1Score: 91.8,\n    lastUpdated: new Date(),\n    status: 'active',\n    totalTransactions: 1250000,\n    fraudDetected: 15750,\n    falsePositives: 420\n  })\n\n  const dailyStats = ref([\n    { date: '2024-01-15', transactions: 45000, frauds: 180, blocked: 165 },\n    { date: '2024-01-16', transactions: 48000, frauds: 195, blocked: 178 },\n    { date: '2024-01-17', transactions: 52000, frauds: 210, blocked: 198 },\n    { date: '2024-01-18', transactions: 49000, frauds: 175, blocked: 160 },\n    { date: '2024-01-19', transactions: 51000, frauds: 220, blocked: 205 },\n    { date: '2024-01-20', transactions: 47000, frauds: 165, blocked: 152 },\n    { date: '2024-01-21', transactions: 53000, frauds: 240, blocked: 225 }\n  ])\n\n  return {\n    generateMockTransactions,\n    modelMetrics,\n    dailyStats\n  }\n}","<template>\n  <NuxtLayout name=\"default\">\n  <div class=\"space-y-6\">\n    <!-- Stats Overview -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      <div class=\"card p-6\">\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <p class=\"text-sm text-gray-400\">Model Accuracy</p>\n            <p class=\"text-2xl font-bold text-green-400\">{{ modelMetrics.accuracy }}%</p>\n          </div>\n          <div class=\"w-12 h-12 bg-green-500/20 rounded-lg flex items-center justify-center\">\n            <CheckCircleIcon class=\"w-6 h-6 text-green-400\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card p-6\">\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <p class=\"text-sm text-gray-400\">Total Transactions</p>\n            <p class=\"text-2xl font-bold text-blue-400\">{{ formatNumber(modelMetrics.totalTransactions) }}</p>\n          </div>\n          <div class=\"w-12 h-12 bg-blue-500/20 rounded-lg flex items-center justify-center\">\n            <CreditCardIcon class=\"w-6 h-6 text-blue-400\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card p-6\">\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <p class=\"text-sm text-gray-400\">Frauds Detected</p>\n            <p class=\"text-2xl font-bold text-red-400\">{{ formatNumber(modelMetrics.fraudDetected) }}</p>\n          </div>\n          <div class=\"w-12 h-12 bg-red-500/20 rounded-lg flex items-center justify-center\">\n            <ExclamationTriangleIcon class=\"w-6 h-6 text-red-400\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card p-6\">\n        <div class=\"flex items-center justify-between\">\n          <div>\n            <p class=\"text-sm text-gray-400\">Model Status</p>\n            <p class=\"text-2xl font-bold text-green-400 capitalize\">{{ modelMetrics.status }}</p>\n          </div>\n          <div class=\"w-12 h-12 bg-green-500/20 rounded-lg flex items-center justify-center\">\n            <div class=\"w-3 h-3 bg-green-400 rounded-full animate-pulse\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Charts Row -->\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <!-- Daily Transactions Chart -->\n      <div class=\"card p-6\">\n        <h3 class=\"text-lg font-semibold text-white mb-4\">Daily Transactions</h3>\n        <div class=\"h-64\">\n          <DashboardChart :data=\"chartData\" type=\"line\" />\n        </div>\n      </div>\n\n      <!-- Fraud Distribution -->\n      <div class=\"card p-6\">\n        <h3 class=\"text-lg font-semibold text-white mb-4\">Fraud Distribution</h3>\n        <div class=\"h-64\">\n          <DashboardChart :data=\"pieChartData\" type=\"doughnut\" />\n        </div>\n      </div>\n    </div>\n\n    <!-- Model Performance -->\n    <div class=\"card p-6\">\n      <h3 class=\"text-lg font-semibold text-white mb-6\">Model Performance Metrics</h3>\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-blue-400\">{{ modelMetrics.precision }}%</div>\n          <div class=\"text-sm text-gray-400\">Precision</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-green-400\">{{ modelMetrics.recall }}%</div>\n          <div class=\"text-sm text-gray-400\">Recall</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-purple-400\">{{ modelMetrics.f1Score }}%</div>\n          <div class=\"text-sm text-gray-400\">F1-Score</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-yellow-400\">{{ modelMetrics.falsePositives }}</div>\n          <div class=\"text-sm text-gray-400\">False Positives</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Recent Transactions -->\n    <div class=\"card p-6\">\n      <h3 class=\"text-lg font-semibold text-white mb-4\">Recent High-Risk Transactions</h3>\n      <div class=\"overflow-x-auto\">\n        <table class=\"w-full text-sm\">\n          <thead>\n            <tr class=\"border-b border-gray-700\">\n              <th class=\"text-left py-3 text-gray-400\">Transaction ID</th>\n              <th class=\"text-left py-3 text-gray-400\">Amount</th>\n              <th class=\"text-left py-3 text-gray-400\">Merchant</th>\n              <th class=\"text-left py-3 text-gray-400\">Risk Score</th>\n              <th class=\"text-left py-3 text-gray-400\">Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"transaction in recentTransactions\" :key=\"transaction.id\" class=\"border-b border-gray-700/50\">\n              <td class=\"py-3 text-blue-400\">{{ transaction.id }}</td>\n              <td class=\"py-3\">${{ transaction.amount.toFixed(2) }}</td>\n              <td class=\"py-3\">{{ transaction.merchant }}</td>\n              <td class=\"py-3\">\n                <span \n                  :class=\"transaction.riskScore > 80 ? 'text-red-400' : transaction.riskScore > 50 ? 'text-yellow-400' : 'text-green-400'\"\n                >\n                  {{ transaction.riskScore.toFixed(1) }}%\n                </span>\n              </td>\n              <td class=\"py-3\">\n                <span \n                  :class=\"transaction.isFraud ? 'bg-red-500/20 text-red-400' : 'bg-green-500/20 text-green-400'\"\n                  class=\"px-2 py-1 rounded-full text-xs\"\n                >\n                  {{ transaction.isFraud ? 'Flagged' : 'Approved' }}\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  </NuxtLayout>\n</template>\n\n<script setup lang=\"ts\">\nimport { \n  CheckCircleIcon, \n  CreditCardIcon, \n  ExclamationTriangleIcon \n} from '@heroicons/vue/24/outline'\n\ndefinePageMeta({\n  middleware: 'auth'\n})\n\nconst { modelMetrics, dailyStats, generateMockTransactions } = useFraudData()\n\nconst recentTransactions = computed(() => {\n  return generateMockTransactions(10).filter(t => t.riskScore > 60).slice(0, 5)\n})\n\nconst formatNumber = (num: number) => {\n  return new Intl.NumberFormat().format(num)\n}\n\nconst chartData = computed(() => ({\n  labels: dailyStats.value.map(d => new Date(d.date).toLocaleDateString()),\n  datasets: [\n    {\n      label: 'Total Transactions',\n      data: dailyStats.value.map(d => d.transactions),\n      borderColor: '#3B82F6',\n      backgroundColor: '#3B82F6',\n      tension: 0.4\n    },\n    {\n      label: 'Fraudulent',\n      data: dailyStats.value.map(d => d.frauds),\n      borderColor: '#EF4444',\n      backgroundColor: '#EF4444',\n      tension: 0.4\n    }\n  ]\n}))\n\nconst pieChartData = computed(() => ({\n  labels: ['Legitimate', 'Fraudulent', 'Under Review'],\n  datasets: [\n    {\n      data: [94.5, 4.2, 1.3],\n      backgroundColor: ['#10B981', '#EF4444', '#F59E0B'],\n      borderWidth: 0\n    }\n  ]\n}))\n</script>"],"version":3}