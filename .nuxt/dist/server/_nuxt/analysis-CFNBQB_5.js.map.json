{"file":"analysis-CFNBQB_5.js","mappings":"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","names":["_ssrRenderComponent","_mergeProps","_push","_parent","_unref","_ssrInterpolate","_ssrRenderStyle","_ssrRenderList","_createVNode","_createBlock","$refs","_toDisplayString","_Fragment","_renderList","_openBlock"],"sources":["../../../../pages/analysis.vue"],"sourcesContent":["<template>\n  <NuxtLayout name=\"default\">\n  <div class=\"space-y-6\">\n    <!-- Analysis Controls -->\n    <div class=\"card p-6\">\n      <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n        <h2 class=\"text-xl font-semibold text-white\">Data Analysis & Visualization</h2>\n        <div class=\"flex space-x-4\" v-if=\"analysisData\">\n          <select v-model=\"timeRange\" @change=\"fetchAnalysisData\" class=\"input-field\">\n            <option value=\"7d\">Last 7 days</option>\n            <option value=\"30d\">Last 30 days</option>\n            <option value=\"90d\">Last 90 days</option>\n            <option value=\"1y\">Last year</option>\n          </select>\n          <button @click=\"refreshData\" :disabled=\"loading\" class=\"btn-primary flex items-center space-x-2\">\n            <ArrowPathIcon v-if=\"loading\" class=\"w-4 h-4 animate-spin\" />\n            <span>{{ loading ? 'Refreshing...' : 'Refresh Data' }}</span>\n          </button>\n          <button @click=\"exportAnalysis\" class=\"btn-primary\">Export Analysis</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- File Upload Section -->\n    <div v-if=\"!analysisData\" class=\"card p-8\">\n      <div class=\"text-center\">\n        <div class=\"mb-6\">\n          <DocumentArrowUpIcon class=\"w-16 h-16 text-blue-400 mx-auto mb-4\" />\n          <h3 class=\"text-xl font-semibold text-white mb-2\">Upload Data File</h3>\n          <p class=\"text-gray-400\">Upload a CSV file to begin your fraud detection analysis</p>\n        </div>\n\n        <!-- File Drop Zone -->\n        <div \n          @drop=\"handleFileDrop\"\n          @dragover.prevent\n          @dragenter.prevent\n          class=\"border-2 border-dashed border-gray-600 rounded-lg p-8 mb-4 transition-colors\"\n          :class=\"{\n            'border-blue-500 bg-blue-500/5': isDragging,\n            'hover:border-gray-500 hover:bg-gray-700/20': !isDragging\n          }\"\n          @dragenter=\"isDragging = true\"\n          @dragleave=\"isDragging = false\"\n        >\n          <div class=\"space-y-4\">\n            <CloudArrowUpIcon class=\"w-12 h-12 text-gray-400 mx-auto\" />\n            <div>\n              <p class=\"text-white font-medium\">Drop your CSV file here</p>\n              <p class=\"text-gray-400 text-sm\">or click to browse</p>\n            </div>\n            <input\n              ref=\"fileInput\"\n              type=\"file\"\n              accept=\".csv,.xlsx,.xls\"\n              @change=\"handleFileSelect\"\n              class=\"hidden\"\n            />\n            <button @click=\"$refs.fileInput.click()\" class=\"btn-primary\">\n              Choose File\n            </button>\n          </div>\n        </div>\n\n\n\n      </div>\n    </div>\n\n    <!-- File Processing Status -->\n    <div v-if=\"uploadStatus.processing\" class=\"card p-6\">\n      <div class=\"flex items-center space-x-4\">\n        <ArrowPathIcon class=\"w-6 h-6 animate-spin text-blue-400\" />\n        <div class=\"flex-1\">\n          <h3 class=\"text-white font-medium\">Processing File</h3>\n          <p class=\"text-gray-400 text-sm\">{{ uploadStatus.message }}</p>\n          <div class=\"w-full bg-gray-700 rounded-full h-2 mt-2\">\n            <div \n              class=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\n              :style=\"{ width: uploadStatus.progress + '%' }\"\n            ></div>\n          </div>\n        </div>\n        <span class=\"text-blue-400 text-sm\">{{ uploadStatus.progress }}%</span>\n      </div>\n    </div>\n\n    <!-- Upload Success/Error -->\n    <div v-if=\"uploadStatus.completed && !uploadStatus.error\" class=\"card p-6 border-green-500/20 bg-green-500/5\">\n      <div class=\"flex items-center space-x-3\">\n        <CheckCircleIcon class=\"w-6 h-6 text-green-400\" />\n        <div>\n          <h3 class=\"text-green-400 font-semibold\">File Uploaded Successfully</h3>\n          <p class=\"text-gray-300 text-sm\">{{ uploadStatus.fileName }} - {{ formatNumber(uploadStatus.recordCount) }} records processed</p>\n        </div>\n        <button @click=\"resetUpload\" class=\"btn-secondary text-sm ml-auto\">\n          Upload New File\n        </button>\n      </div>\n    </div>\n\n    <div v-if=\"uploadStatus.error\" class=\"card p-6 border-red-500/20 bg-red-500/5\">\n      <div class=\"flex items-center space-x-3\">\n        <ExclamationTriangleIcon class=\"w-6 h-6 text-red-400\" />\n        <div>\n          <h3 class=\"text-red-400 font-semibold\">Upload Error</h3>\n          <p class=\"text-gray-300 text-sm\">{{ uploadStatus.error }}</p>\n          <button @click=\"resetUpload\" class=\"btn-primary mt-2 text-sm\">Try Again</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading State -->\n    <div v-if=\"loading && analysisData\" class=\"flex items-center justify-center py-12\">\n      <div class=\"text-center\">\n        <ArrowPathIcon class=\"w-8 h-8 animate-spin mx-auto mb-4 text-blue-400\" />\n        <p class=\"text-gray-400\">Loading analysis data...</p>\n      </div>\n    </div>\n\n    <!-- Error State -->\n    <div v-else-if=\"error\" class=\"card p-6 border-red-500/20 bg-red-500/5\">\n      <div class=\"flex items-center space-x-3\">\n        <ExclamationTriangleIcon class=\"w-6 h-6 text-red-400\" />\n        <div>\n          <h3 class=\"text-red-400 font-semibold\">Error Loading Data</h3>\n          <p class=\"text-gray-300 text-sm\">{{ error }}</p>\n          <button @click=\"fetchAnalysisData\" class=\"btn-primary mt-2 text-sm\">Retry</button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Main Content -->\n    <div v-else-if=\"analysisData\">\n      <!-- Key Metrics -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div class=\"card p-6\">\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <p class=\"text-sm text-gray-400\">Fraud Rate</p>\n              <p class=\"text-2xl font-bold text-red-400\">{{ formatPercentage(analysisData.fraud_statistics.fraud_percentage) }}%</p>\n              <p class=\"text-xs text-green-400\">{{ analysisData.fraud_statistics.fraud_cases }} cases detected</p>\n            </div>\n            <div class=\"w-12 h-12 bg-red-500/20 rounded-lg flex items-center justify-center\">\n              <ExclamationTriangleIcon class=\"w-6 h-6 text-red-400\" />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card p-6\">\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <p class=\"text-sm text-gray-400\">Total Transactions</p>\n              <p class=\"text-2xl font-bold text-blue-400\">{{ formatNumber(analysisData.fraud_statistics.total_transactions) }}</p>\n              <p class=\"text-xs text-gray-400\">{{ formatNumber(analysisData.fraud_statistics.legitimate_transactions) }} legitimate</p>\n            </div>\n            <div class=\"w-12 h-12 bg-blue-500/20 rounded-lg flex items-center justify-center\">\n              <ChartBarIcon class=\"w-6 h-6 text-blue-400\" />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card p-6\">\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <p class=\"text-sm text-gray-400\">High Risk Amount Range</p>\n              <p class=\"text-2xl font-bold text-yellow-400\">$501-1000</p>\n              <p class=\"text-xs text-red-400\">{{ formatPercentage(getAmountRangeFraudRate('501-1000')) }}% fraud rate</p>\n            </div>\n            <div class=\"w-12 h-12 bg-yellow-500/20 rounded-lg flex items-center justify-center\">\n              <CurrencyDollarIcon class=\"w-6 h-6 text-yellow-400\" />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card p-6\">\n          <div class=\"flex items-center justify-between\">\n            <div>\n              <p class=\"text-sm text-gray-400\">Detection Accuracy</p>\n              <p class=\"text-2xl font-bold text-green-400\">{{ calculateAccuracy() }}%</p>\n              <p class=\"text-xs text-green-400\">System performance</p>\n            </div>\n            <div class=\"w-12 h-12 bg-green-500/20 rounded-lg flex items-center justify-center\">\n              <ShieldCheckIcon class=\"w-6 h-6 text-green-400\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Charts Grid -->\n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <!-- Category Analysis -->\n        <div class=\"card p-6\">\n          <h3 class=\"text-lg font-semibold text-white mb-4\">Fraud by Category</h3>\n          <div class=\"h-80\">\n            <DashboardChart :data=\"categoryChartData\" type=\"bar\" />\n          </div>\n        </div>\n\n        <!-- Amount Distribution -->\n        <div class=\"card p-6\">\n          <h3 class=\"text-lg font-semibold text-white mb-4\">Fraud Rate by Amount Range</h3>\n          <div class=\"h-80\">\n            <DashboardChart :data=\"amountChartData\" type=\"line\" />\n          </div>\n        </div>\n\n        <!-- Gender Distribution -->\n        <div class=\"card p-6\">\n          <h3 class=\"text-lg font-semibold text-white mb-4\">Fraud Distribution by Gender</h3>\n          <div class=\"h-80\">\n            <DashboardChart :data=\"genderChartData\" type=\"doughnut\" />\n          </div>\n        </div>\n\n        <!-- High Risk Categories -->\n        <div class=\"card p-6\">\n          <h3 class=\"text-lg font-semibold text-white mb-4\">Highest Risk Categories</h3>\n          <div class=\"space-y-4\">\n            <div v-for=\"category in topRiskCategories\" :key=\"category.name\" class=\"flex items-center\">\n              <div class=\"w-32 text-sm text-gray-300\">{{ formatCategoryName(category.name) }}</div>\n              <div class=\"flex-1 mx-4\">\n                <div class=\"w-full bg-gray-700 rounded-full h-3\">\n                  <div \n                    class=\"bg-gradient-to-r from-red-500 to-orange-500 h-3 rounded-full transition-all duration-500\"\n                    :style=\"{ width: (category.fraud_rate / topRiskCategories[0].fraud_rate) * 100 + '%' }\"\n                  ></div>\n                </div>\n              </div>\n              <div class=\"w-16 text-sm text-red-400 text-right\">{{ formatPercentage(category.fraud_rate * 100) }}%</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Insights and Analysis -->\n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <!-- AI Insights -->\n        <div class=\"card p-6\">\n          <h3 class=\"text-lg font-semibold text-white mb-4\">AI Insights</h3>\n          <div class=\"space-y-3\">\n            <div \n              v-for=\"(insight, index) in analysisData.insights\" \n              :key=\"index\"\n              class=\"flex items-start space-x-3 p-3 bg-gray-700/30 rounded-lg\"\n            >\n              <div class=\"w-6 h-6 bg-blue-500/20 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                <span class=\"text-blue-400 text-xs font-bold\">{{ index + 1 }}</span>\n              </div>\n              <p class=\"text-gray-300 text-sm\">{{ insight }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Amount Analysis Deep Dive -->\n        <div class=\"card p-6\">\n          <h3 class=\"text-lg font-semibold text-white mb-4\">Amount Range Analysis</h3>\n          <div class=\"space-y-4\">\n            <div \n              v-for=\"(data, range) in analysisData.trends.by_amount\" \n              :key=\"range\"\n              class=\"flex items-center justify-between p-3 bg-gray-700/30 rounded-lg\"\n            >\n              <div>\n                <div class=\"font-medium text-white\">${{ range }}</div>\n                <div class=\"text-sm text-gray-400\">{{ formatNumber(data.count) }} transactions</div>\n              </div>\n              <div class=\"text-right\">\n                <div class=\"font-medium\" :class=\"getFraudRateColor(data.mean * 100)\">\n                  {{ formatPercentage(data.mean * 100) }}%\n                </div>\n                <div class=\"text-sm text-gray-400\">{{ data.sum }} fraud cases</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Gender Comparison -->\n      <div class=\"card p-6\">\n        <h3 class=\"text-lg font-semibold text-white mb-4\">Gender-Based Analysis</h3>\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div \n            v-for=\"(data, gender) in analysisData.trends.by_gender\" \n            :key=\"gender\"\n            class=\"p-4 bg-gray-700/30 rounded-lg text-center\"\n          >\n            <div class=\"text-2xl font-bold mb-2\" :class=\"gender === 'F' ? 'text-pink-400' : 'text-blue-400'\">\n              {{ gender === 'F' ? 'Female' : 'Male' }}\n            </div>\n            <div class=\"grid grid-cols-2 gap-4 text-sm\">\n              <div>\n                <div class=\"text-gray-400\">Transactions</div>\n                <div class=\"font-semibold text-white\">{{ formatNumber(data.count) }}</div>\n              </div>\n              <div>\n                <div class=\"text-gray-400\">Fraud Cases</div>\n                <div class=\"font-semibold text-red-400\">{{ data.sum }}</div>\n              </div>\n              <div class=\"col-span-2\">\n                <div class=\"text-gray-400\">Fraud Rate</div>\n                <div class=\"font-semibold\" :class=\"getFraudRateColor(data.mean * 100)\">\n                  {{ formatPercentage(data.mean * 100) }}%\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </NuxtLayout>\n</template>\n\n<script setup>\nimport { \n  ExclamationTriangleIcon, \n  CurrencyDollarIcon, \n  ShieldCheckIcon,\n  ChartBarIcon,\n  ArrowPathIcon,\n  DocumentArrowUpIcon,\n  CloudArrowUpIcon,\n  CheckCircleIcon\n} from '@heroicons/vue/24/outline'\n\ndefinePageMeta({\n  middleware: 'auth'\n})\n\n// Reactive data\nconst timeRange = ref('30d')\nconst analysisData = ref(null)\nconst loading = ref(false)\nconst error = ref(null)\nconst isDragging = ref(false)\nconst uploadedFile = ref(null)\n\n// Upload status tracking\nconst uploadStatus = ref({\n  processing: false,\n  completed: false,\n  error: null,\n  progress: 0,\n  message: '',\n  fileName: '',\n  recordCount: 0\n})\n\n// API configuration\nconst config = useRuntimeConfig()\nconst API_BASE_URL = config.public.apiBase || 'http://localhost:8000'\n\n// Helper functions - Fixed versions\nconst formatNumber = (num) => {\n  if (num == null || num === '' || isNaN(num)) return '0'\n  return new Intl.NumberFormat().format(Number(num))\n}\n\nconst formatPercentage = (num) => {\n  if (num == null || num === '' || isNaN(num)) return '0.00'\n  return Number(num).toFixed(2)\n}\n\nconst formatCategoryName = (name) => {\n  if (!name) return ''\n  return name.split('_').map(word => \n    word.charAt(0).toUpperCase() + word.slice(1)\n  ).join(' ')\n}\n\nconst getAmountRangeFraudRate = (range) => {\n  if (!analysisData.value?.trends?.by_amount) return '0.00'\n  const data = analysisData.value.trends.by_amount[range]\n  if (!data || data.mean == null || isNaN(data.mean)) return '0.00'\n  return (Number(data.mean) * 100).toFixed(2)\n}\n\nconst calculateAccuracy = () => {\n  if (!analysisData.value?.fraud_statistics) return '0.0'\n  const stats = analysisData.value.fraud_statistics\n  if (!stats.legitimate_transactions || !stats.total_transactions) return '0.0'\n  return ((Number(stats.legitimate_transactions) / Number(stats.total_transactions)) * 100).toFixed(1)\n}\n\nconst getFraudRateColor = (rate) => {\n  const numRate = Number(rate)\n  if (isNaN(numRate)) return 'text-gray-400'\n  if (numRate > 10) return 'text-red-400'\n  if (numRate > 5) return 'text-orange-400'\n  if (numRate > 1) return 'text-yellow-400'\n  return 'text-green-400'\n}\n\n// File upload handlers\nconst handleFileDrop = (event) => {\n  event.preventDefault()\n  isDragging.value = false\n  \n  const files = event.dataTransfer.files\n  if (files.length > 0) {\n    processFile(files[0])\n  }\n}\n\nconst handleFileSelect = (event) => {\n  const files = event.target.files\n  if (files.length > 0) {\n    processFile(files[0])\n  }\n}\n\nconst processFile = async (file) => {\n  // Validate file\n  const validTypes = ['.csv', '.xlsx', '.xls']\n  const fileExtension = '.' + file.name.split('.').pop().toLowerCase()\n  \n  if (!validTypes.includes(fileExtension)) {\n    uploadStatus.value.error = 'Invalid file format. Please upload a CSV or Excel file.'\n    return\n  }\n  \n  uploadedFile.value = file\n  await uploadFile(file)\n}\n\nconst uploadFile = async (file) => {\n  let progressInterval\n  \n  try {\n    uploadStatus.value = {\n      processing: true,\n      completed: false,\n      error: null,\n      progress: 0,\n      message: 'Preparing file upload...',\n      fileName: file.name,\n      recordCount: 0\n    }\n    \n    const formData = new FormData()\n    formData.append('file', file)\n  \n    // Simulate upload progress\n    progressInterval = setInterval(() => {\n      if (uploadStatus.value.progress < 90) {\n        uploadStatus.value.progress += Math.random() * 15\n        if (uploadStatus.value.progress < 25) {\n          uploadStatus.value.message = 'Uploading file...'\n        } else if (uploadStatus.value.progress < 50) {\n          uploadStatus.value.message = 'Processing data...'\n        } else if (uploadStatus.value.progress < 75) {\n          uploadStatus.value.message = 'Analyzing patterns...'\n        } else {\n          uploadStatus.value.message = 'Generating insights...'\n        }\n      }\n    }, 400)\n    \n    const response = await $fetch(`${API_BASE_URL}/analyze`, {\n      method: 'POST',\n      body: formData\n    })\n    \n    clearInterval(progressInterval)\n    \n    // Add debugging logs\n    console.log('API Response:', response)\n    console.log('Response structure:', Object.keys(response || {}))\n    \n    // Handle different response structures\n    const responseData = response.data || response\n    console.log('Analysis data structure:', responseData)\n    console.log('Fraud statistics:', responseData?.fraud_statistics)\n    \n    uploadStatus.value.progress = 100\n    uploadStatus.value.message = 'Analysis complete!'\n    uploadStatus.value.processing = false\n    uploadStatus.value.completed = true\n    uploadStatus.value.recordCount = response.record_count || responseData?.fraud_statistics?.total_transactions || 0\n    \n    // Set analysis data\n    analysisData.value = responseData\n    \n    // Additional debugging\n    if (analysisData.value) {\n      console.log('Final analysis data:', analysisData.value)\n      console.log('Fraud percentage type:', typeof analysisData.value.fraud_statistics?.fraud_percentage)\n      console.log('Fraud percentage value:', analysisData.value.fraud_statistics?.fraud_percentage)\n    }\n    \n  } catch (err) {\n    if (progressInterval) clearInterval(progressInterval)\n    console.error('Error uploading and analyzing file:', err)\n    uploadStatus.value.processing = false\n    uploadStatus.value.error = err.data?.detail || err.message || 'Failed to upload and analyze file. Please try again.'\n  }\n}\n\nconst resetUpload = () => {\n  uploadStatus.value = {\n    processing: false,\n    completed: false,\n    error: null,\n    progress: 0,\n    message: '',\n    fileName: '',\n    recordCount: 0\n  }\n  analysisData.value = null\n  uploadedFile.value = null\n  error.value = null\n}\n\n// Fetch updated analysis data from the same endpoint\nconst fetchAnalysisData = async () => {\n  if (!analysisData.value) {\n    error.value = 'No data available. Please upload a file first.'\n    return\n  }\n  \n  try {\n    loading.value = true\n    error.value = null\n    \n    const formData = new FormData()\n    if (uploadedFile.value) {\n      formData.append('file', uploadedFile.value)\n      formData.append('time_range', timeRange.value)\n      \n      const response = await $fetch(`${API_BASE_URL}/analyze`, {\n        method: 'POST',\n        body: formData\n      })\n      \n      analysisData.value = response.data || response\n    }\n  } catch (err) {\n    console.error('Error fetching analysis data:', err)\n    error.value = 'Failed to refresh analysis data. Please try again.'\n  } finally {\n    loading.value = false\n  }\n}\n\n// Refresh data\nconst refreshData = () => {\n  fetchAnalysisData()\n}\n\n// Export analysis using the same endpoint with export parameter\nconst exportAnalysis = async () => {\n  if (!uploadedFile.value) {\n    error.value = 'No data available to export.'\n    return\n  }\n  \n  try {\n    const formData = new FormData()\n    formData.append('file', uploadedFile.value)\n    formData.append('time_range', timeRange.value)\n    formData.append('export_format', 'csv')\n    \n    const response = await $fetch(`${API_BASE_URL}/analyze`, {\n      method: 'POST',\n      body: formData\n    })\n    \n    // Create download link for the exported data\n    const exportData = response.export_data || response\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' })\n    const url = window.URL.createObjectURL(blob)\n    const link = document.createElement('a')\n    link.href = url\n    link.download = `fraud_analysis_${timeRange.value}_${new Date().toISOString().split('T')[0]}.json`\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n    window.URL.revokeObjectURL(url)\n  } catch (err) {\n    console.error('Error exporting analysis:', err)\n  }\n}\n\n// Computed properties for charts - Fixed versions\nconst categoryChartData = computed(() => {\n  if (!analysisData.value?.trends?.by_category) return null\n  \n  const categories = analysisData.value.trends.by_category\n  const sortedCategories = Object.entries(categories)\n    .filter(([, data]) => data && data.mean != null)\n    .sort(([,a], [,b]) => Number(b.mean) - Number(a.mean))\n    .slice(0, 10)\n  \n  return {\n    labels: sortedCategories.map(([name]) => formatCategoryName(name)),\n    datasets: [\n      {\n        label: 'Fraud Rate (%)',\n        data: sortedCategories.map(([, data]) => (Number(data.mean) * 100).toFixed(3)),\n        backgroundColor: 'rgba(239, 68, 68, 0.8)',\n        borderColor: '#EF4444',\n        borderWidth: 1\n      }\n    ]\n  }\n})\n\nconst amountChartData = computed(() => {\n  if (!analysisData.value?.trends?.by_amount) return null\n  \n  const amounts = analysisData.value.trends.by_amount\n  const ranges = ['0-50', '51-100', '101-500', '501-1000', '1000+']\n  \n  return {\n    labels: ranges.map(range => `$${range}`),\n    datasets: [\n      {\n        label: 'Fraud Rate (%)',\n        data: ranges.map(range => {\n          const data = amounts[range]\n          return data && data.mean != null ? (Number(data.mean) * 100).toFixed(3) : '0'\n        }),\n        borderColor: '#F59E0B',\n        backgroundColor: 'rgba(245, 158, 11, 0.1)',\n        tension: 0.4,\n        fill: true\n      }\n    ]\n  }\n})\n\nconst genderChartData = computed(() => {\n  if (!analysisData.value?.trends?.by_gender) return null\n  \n  const genderData = analysisData.value.trends.by_gender\n  \n  return {\n    labels: ['Female', 'Male'],\n    datasets: [\n      {\n        data: [\n          genderData.F?.sum || 0, \n          genderData.M?.sum || 0\n        ],\n        backgroundColor: ['#EC4899', '#3B82F6'],\n        borderWidth: 0\n      }\n    ]\n  }\n})\n\nconst topRiskCategories = computed(() => {\n  if (!analysisData.value?.trends?.by_category) return []\n  \n  return Object.entries(analysisData.value.trends.by_category)\n    .filter(([, data]) => data && data.mean != null)\n    .map(([name, data]) => ({\n      name,\n      fraud_rate: Number(data.mean),\n      fraud_cases: data.sum || 0,\n      total_transactions: data.count || 0\n    }))\n    .sort((a, b) => b.fraud_rate - a.fraud_rate)\n    .slice(0, 8)\n})\n\n// Watch for time range changes\nwatch(timeRange, () => {\n  if (analysisData.value) {\n    fetchAnalysisData()\n  }\n})\n</script>\n\n<style scoped>\n.input-field {\n  @apply bg-gray-700 border border-gray-600 text-white rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500;\n}\n\n.btn-primary {\n  @apply bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed;\n}\n\n.btn-secondary {\n  @apply bg-gray-600 hover:bg-gray-700 text-white font-medium py-2 px-4 rounded-lg transition-colors;\n}\n\n.card {\n  @apply bg-gray-800 border border-gray-700 rounded-lg;\n}\n</style>"],"version":3}