{"version":3,"file":"useAuth-XXrPh909.js","sources":["../../../../composables/useAuth.ts"],"sourcesContent":["export const useAuth = () => {\n  const isAuthenticated = useState('auth.isAuthenticated', () => false)\n  const user = useState('auth.user', () => null)\n\n  const login = async (credentials: { email: string; password: string }) => {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    \n    if (credentials.email === 'blessing@gmail.com' && credentials.password === 'password') {\n      isAuthenticated.value = true\n      user.value = {\n        name: 'Dr. Sarah Chen',\n        email: 'blessing@gmail.com',\n        role: 'Data Scientist'\n      }\n      return { success: true }\n    }\n    \n    return { success: false, error: 'Invalid credentials' }\n  }\n\n  const logout = () => {\n    isAuthenticated.value = false\n    user.value = null\n    navigateTo('/login')\n  }\n\n  return {\n    isAuthenticated: readonly(isAuthenticated),\n    user: readonly(user),\n    login,\n    logout\n  }\n}"],"names":[],"mappings":";;;AAAO,MAAM,UAAU,MAAM;AAC3B,QAAM,kBAAkB,SAAS,wBAAwB,MAAM,KAAK;AACpE,QAAM,OAAO,SAAS,aAAa,MAAM,IAAI;AAE7C,QAAM,QAAQ,OAAO,gBAAqD;AAExE,UAAM,IAAI,QAAQ,CAAA,YAAW,WAAW,SAAS,GAAI,CAAC;AAEtD,QAAI,YAAY,UAAU,wBAAwB,YAAY,aAAa,YAAY;AACrF,sBAAgB,QAAQ;AACxB,WAAK,QAAQ;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA,QACP,MAAM;AAAA,MAAA;AAER,aAAO,EAAE,SAAS,KAAA;AAAA,IACpB;AAEA,WAAO,EAAE,SAAS,OAAO,OAAO,sBAAA;AAAA,EAClC;AAEA,QAAM,SAAS,MAAM;AACnB,oBAAgB,QAAQ;AACxB,SAAK,QAAQ;AACb,eAAW,QAAQ;AAAA,EACrB;AAEA,SAAO;AAAA,IACL,iBAAiB,SAAS,eAAe;AAAA,IACzC,MAAM,SAAS,IAAI;AAAA,IACnB;AAAA,IACA;AAAA,EAAA;AAEJ;"}